head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2006.02.03.16.26.12;	author fdlcruz;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial commit
@
text
@package thinkwink.switchboard.taglib;

import static thinkwink.switchboard.util.StaticKeys.BEAN_KEY;

import java.io.IOException;
import java.util.Set;

import javax.servlet.ServletRequest;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.tagext.TagSupport;

import thinkwink.switchboard.framework.ifaces.SwitchBoardBean;
import thinkwink.switchboard.util.KVPair;

public class LoadContextTag extends TagSupport {
	private static final long serialVersionUID = 1L;

	private String key;
	
	public void setKey(String key){
		this.key = key;
	}
	
	public int doStartTag(){
		JspWriter out           = pageContext.getOut();
		ServletRequest request  = pageContext.getRequest();
		SwitchBoardBean    bean = (SwitchBoardBean) request.getAttribute(BEAN_KEY);
		KVPair           kvPair = bean.getKvPair();
		Set <String> keySet;
		String[] value;
		
		try {
			keySet = kvPair.keySet();
			
			for(String key: keySet){
				value = kvPair.get(key);
				
				pageContext.setAttribute(key, value);
			}
			
			//do reflection here on the bean.
			out.println(kvPair.get(key));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return SKIP_BODY;
	}
	
	public int doEndTag(){
		return EVAL_PAGE;
	}
}
@
